{"version":3,"sources":["ZonesContext.tsx","zones-plan.jpeg","components/MiniMap.tsx","components/FullMap.tsx","hooks/useImage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ZonesContext","React","createContext","fullMapRef","current","fullMapXPosition","fullMapYPosition","setFullMapXPosition","setFullMapYPosition","miniMapRef","miniMapXPosition","miniMapYPosition","setMiniMapXPosition","setMiniMapYPosition","scale","setScale","scaleDelta","setScaleDelta","ZonesProvider","children","useRef","useState","Provider","value","MiniMap","viewBoxRef","useContext","viewDimensions","width","window","innerWidth","height","innerHeight","ref","scaleX","MINI_MAP_WIDTH","scaleY","MINI_MAP_HEIGHT","id","x","y","onDragMove","getPosition","draggable","fill","stroke","strokeWidth","FullMap","image","url","crossOrigin","undefined","status","state","setState","useEffect","img","document","createElement","addEventListener","onload","onerror","src","removeEventListener","useImage","zonesPlanImage","onWheel","event","newScale","evt","deltaY","App","style","overflow","position","top","left","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.76f270f5.chunk.js","sourcesContent":["import React, {useRef} from \"react\"\nimport {Stage} from \"konva/lib/Stage\"\n\ninterface IZonesContext {\n  fullMapRef: React.MutableRefObject<Stage | null>\n  fullMapXPosition: number\n  fullMapYPosition: number\n  setFullMapXPosition: React.Dispatch<React.SetStateAction<number>>\n  setFullMapYPosition: React.Dispatch<React.SetStateAction<number>>\n  miniMapRef: React.MutableRefObject<Stage | null>\n  miniMapXPosition: number\n  miniMapYPosition: number\n  setMiniMapXPosition: React.Dispatch<React.SetStateAction<number>>\n  setMiniMapYPosition: React.Dispatch<React.SetStateAction<number>>\n  scale: number,\n  setScale: React.Dispatch<React.SetStateAction<number>>\n  scaleDelta: number\n  setScaleDelta: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const ZonesContext = React.createContext<IZonesContext>({\n  fullMapRef: {current: null},\n  fullMapXPosition: 0,\n  fullMapYPosition: 0,\n  setFullMapXPosition: () => {},\n  setFullMapYPosition: () => {},\n  miniMapRef: {current: null},\n  miniMapXPosition: 0,\n  miniMapYPosition: 0,\n  setMiniMapXPosition: () => {},\n  setMiniMapYPosition: () => {},\n  scale: 1,\n  setScale: () => {},\n  scaleDelta: 0,\n  setScaleDelta: () => {}\n})\n\nconst ZonesProvider: React.FC = ({children}) => {\n  const fullMapRef = useRef<Stage>(null)\n  const miniMapRef = useRef<Stage>(null)\n  const [fullMapXPosition, setFullMapXPosition] = React.useState(0)\n  const [fullMapYPosition, setFullMapYPosition] = React.useState(0)\n  const [miniMapXPosition, setMiniMapXPosition] = React.useState(0)\n  const [miniMapYPosition, setMiniMapYPosition] = React.useState(0)\n  const [scale, setScale] = React.useState(1)\n  const [scaleDelta, setScaleDelta] = React.useState(0)\n\n  return (\n    <ZonesContext.Provider value={{\n      fullMapRef,\n      fullMapXPosition,\n      fullMapYPosition,\n      setFullMapXPosition,\n      setFullMapYPosition,\n      miniMapRef,\n      miniMapXPosition,\n      miniMapYPosition,\n      setMiniMapXPosition,\n      setMiniMapYPosition,\n      scale,\n      setScale,\n      scaleDelta,\n      setScaleDelta\n    }}>\n      {children}\n    </ZonesContext.Provider>\n  )\n}\n\nexport default ZonesProvider\n","export default __webpack_public_path__ + \"static/media/zones-plan.fbffd0f7.jpeg\";","import React from 'react'\nimport {ZonesContext} from \"../ZonesContext\"\nimport {Stage} from \"react-konva/lib/ReactKonvaCore\"\nimport {Layer, Rect} from \"react-konva\"\nimport IRect from \"konva/lib/shapes/Rect\"\n\nconst MINI_MAP_WIDTH = 271;\nconst MINI_MAP_HEIGHT = 271;\nexport const FULL_MAP_WIDTH = 2000;\nexport const FULL_MAP_HEIGHT = 2000;\n\nconst MiniMap = () => {\n  const viewBoxRef = React.useRef<IRect.Rect>(null)\n  const {\n    miniMapRef,\n    setMiniMapXPosition,\n    setMiniMapYPosition,\n    fullMapXPosition,\n    fullMapYPosition,\n    scale\n  } = React.useContext(ZonesContext)\n\n  const viewDimensions = {\n    width: window.innerWidth / scale,\n    height: window.innerHeight / scale\n  }\n  // const devices: any[] = []\n\n  function handleDragMove() {\n    if (viewBoxRef.current !== null) {\n      const { x, y } = viewBoxRef.current.getPosition();\n      setMiniMapXPosition(x * -1);\n      setMiniMapYPosition(y * -1);\n    }\n  }\n\n  return (\n    <Stage\n      width={MINI_MAP_WIDTH}\n      height={MINI_MAP_HEIGHT}\n      ref={miniMapRef}\n      scaleX={MINI_MAP_WIDTH / FULL_MAP_WIDTH}\n      scaleY={MINI_MAP_HEIGHT / FULL_MAP_HEIGHT}\n    >\n      {/*<Layer id='screens'>*/}\n      {/*  <Group>*/}\n      {/*    {devices}*/}\n      {/*  </Group>*/}\n      {/*</Layer>*/}\n      <Layer id='viewbox'>\n        <Rect\n          x={fullMapXPosition}\n          y={fullMapYPosition}\n          onDragMove={handleDragMove}\n          draggable\n          width={viewDimensions.width}\n          height={viewDimensions.height}\n          fill='rgba(86, 204, 242, 0.1)'\n          stroke='#2d9cdb'\n          strokeWidth={2}\n          ref={viewBoxRef}\n        />\n      </Layer>\n    </Stage>\n  )\n}\n\nexport default MiniMap\n","import React from 'react'\nimport {Image, Layer, Rect, Stage} from \"react-konva\"\nimport {ZonesContext} from \"../ZonesContext\"\nimport {useImage} from \"../hooks/useImage\"\nimport zonesPlanImage from \"../zones-plan.jpeg\"\nimport {KonvaEventObject} from \"konva/lib/Node\"\nimport {FULL_MAP_HEIGHT, FULL_MAP_WIDTH} from \"./MiniMap\"\n\nconst scaleBy = 1.03;\n\nconst FullMap = () => {\n  const {image} = useImage(zonesPlanImage)\n  const {\n    fullMapRef,\n    setFullMapXPosition,\n    setFullMapYPosition,\n    scale,\n    setScale\n  } = React.useContext(ZonesContext)\n\n  function zoomStage(event: KonvaEventObject<WheelEvent>) {\n    const stage = fullMapRef.current\n    if (stage !== null) {\n      const newScale = event.evt.deltaY > 0 ? scale * scaleBy : scale / scaleBy;\n      setScale(newScale)\n    }\n  }\n\n  function handleDragMove() {\n    if (fullMapRef.current !== null) {\n      const { x, y } = fullMapRef.current.getPosition();\n      setFullMapXPosition(-x);\n      setFullMapYPosition(-y);\n    }\n  }\n\n  return (\n    <div>\n      <Stage\n        width={FULL_MAP_WIDTH}\n        height={FULL_MAP_HEIGHT}\n        scaleX={scale}\n        scaleY={scale}\n        onDragMove={handleDragMove}\n        draggable={true}\n        onWheel={zoomStage}\n        ref={fullMapRef}\n      >\n        <Layer id='stuffToShow'>\n          <Image image={image} />\n        </Layer>\n      </Stage>\n    </div>\n  )\n}\n\nexport default FullMap\n","import React from \"react\"\n\nexport function useImage(url: string, crossOrigin?: string) {\n  const [state, setState] = React.useState<{\n    image: HTMLImageElement | undefined,\n    status: 'loading' | 'loaded' | 'failed'\n  }>({image: undefined, status: \"loading\"});\n\n  React.useEffect(\n    function () {\n      if (!url) return;\n      const img = document.createElement('img');\n\n      function onload() {\n        setState({ image: img, status: 'loaded' });\n      }\n\n      function onerror() {\n        setState({ image: undefined, status: 'failed' });\n      }\n\n      img.addEventListener('load', onload);\n      img.addEventListener('error', onerror);\n      crossOrigin && (img.crossOrigin = crossOrigin);\n      img.src = url;\n\n      return function cleanup() {\n        img.removeEventListener('load', onload);\n        img.removeEventListener('error', onerror);\n        setState({image: undefined, status: 'loading'});\n      };\n    },\n    [url]\n  );\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return state\n}\n","import React from \"react\"\nimport FullMap from \"./components/FullMap\"\nimport ZonesProvider from \"./ZonesContext\"\nimport MiniMap from \"./components/MiniMap\"\n\nfunction App() {\n  return (\n    <ZonesProvider>\n      <div style={{height: '100vh', width: '100vw', overflow: 'hidden'}}>\n        <FullMap />\n        <div style={{position: \"absolute\", top: 10, left: 10, backgroundColor: '#c1c1c1'}}>\n          <MiniMap />\n        </div>\n      </div>\n    </ZonesProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}